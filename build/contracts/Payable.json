{
  "contractName": "Payable",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferNativeCurrenc",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferNativeCurrenc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Payable.sol\":\"Payable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Payable.sol\":{\"keccak256\":\"0x9d88e0b827bdcb1a9593f6510b2eb28de77abc832a1355d8ace08d2aa1191c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a663ae003fb65ad8621bdcbc53832269b8e94f8aa4eb207d8421150f26b02a90\",\"dweb:/ipfs/QmdCGjS5CM5osYFbeNCqB84NhGsh5TcgkPsmuZ6fRNnDVK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610141806100206000396000f3fe60806040526004361061002d5760003560e01c80631ea3ccf114610039578063d0e30db01461004c57600080fd5b3661003457005b600080fd5b61004c6100473660046100d3565b61004e565b005b47348110156100975760405162461bcd60e51b8152602060048201526011602482015270125b9cdd59999a58da595b9d08199d5b99607a1b604482015260640160405180910390fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156100cd573d6000803e3d6000fd5b50505050565b600080604083850312156100e657600080fd5b82356001600160a01b03811681146100fd57600080fd5b94602093909301359350505056fea264697066735822122007bc58f9d668d3aca8551cb1bb9dbab2cf4a6ab516ffa4ea125c9bb76ef22be764736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061002d5760003560e01c80631ea3ccf114610039578063d0e30db01461004c57600080fd5b3661003457005b600080fd5b61004c6100473660046100d3565b61004e565b005b47348110156100975760405162461bcd60e51b8152602060048201526011602482015270125b9cdd59999a58da595b9d08199d5b99607a1b604482015260640160405180910390fd5b6040516001600160a01b0384169083156108fc029084906000818181858888f193505050501580156100cd573d6000803e3d6000fd5b50505050565b600080604083850312156100e657600080fd5b82356001600160a01b03811681146100fd57600080fd5b94602093909301359350505056fea264697066735822122007bc58f9d668d3aca8551cb1bb9dbab2cf4a6ab516ffa4ea125c9bb76ef22be764736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:724:4",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:4",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:267:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:36:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "206:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "193:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:23:4"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "238:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "249:5:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "264:3:4",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "269:1:4",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "260:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "260:11:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "273:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:19:4"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "245:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "245:31:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "235:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:42:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:50:4"
                  },
                  "nodeType": "YulIf",
                  "src": "225:70:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "304:15:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "314:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "304:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "328:42:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "355:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "366:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "351:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "351:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "338:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:32:4"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "328:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "67:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "78:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "90:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "98:6:4",
                "type": ""
              }
            ],
            "src": "14:362:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "555:167:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "572:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "565:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "606:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "617:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "602:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "602:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "622:2:4",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "595:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "595:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "595:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "645:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "656:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:18:4"
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "661:19:4",
                        "type": "",
                        "value": "Insufficient fund"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "634:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "634:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "690:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "702:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "713:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "698:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "698:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "690:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_deb7d445165b9b7f8c05f1382ef40a5685d20c7246180b1d67b4c7eb28b2c697__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "532:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "546:4:4",
                "type": ""
              }
            ],
            "src": "381:341:4"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_deb7d445165b9b7f8c05f1382ef40a5685d20c7246180b1d67b4c7eb28b2c697__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Insufficient fund\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:1126:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "61:1126:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:238;;;;;;:::i;:::-;;:::i;:::-;;;1058:21;1117:9;1098:28;;;1090:57;;;;-1:-1:-1;;;1090:57:3;;583:2:4;1090:57:3;;;565:21:4;622:2;602:18;;;595:30;-1:-1:-1;;;641:18:4;;;634:47;698:18;;1090:57:3;;;;;;;;1158:18;;-1:-1:-1;;;;;1158:11:3;;;:18;;;;;1170:5;;1158:18;;;;1170:5;1158:11;:18;;;;;;;;;;;;;;;;;;;;;1025:159;946:238;;:::o;14:362:4:-;90:6;98;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:23;;-1:-1:-1;;;;;245:31:4;;235:42;;225:70;;291:1;288;281:12;225:70;314:5;366:2;351:18;;;;338:32;;-1:-1:-1;;;14:362:4:o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.7;\r\n\r\ncontract Payable{\r\n  //to recieve external currency\r\n    receive() external payable {}\r\n\r\n    //  address public owner;\r\n     \r\n\r\n    //  constructor() payable{\r\n    //      owner = msg.sender;\r\n    //  }\r\n\r\n    // modifier onlyOwner(){\r\n    //      require(owner == msg.sender,\"only owner\");\r\n    //      _;\r\n    // } \r\n     /* *\r\n     * @dev withdraw native currency to owner account\r\n     */\r\n\r\n     function deposit() external payable{}\r\n\r\n    //  function balanceOf() external view returns(uint){\r\n    //      return address(this).balance;\r\n    //  }\r\n\r\n    // function withdraw() external payable onlyOwner {\r\n    //     uint nativeCrrency = address(this).balance;\r\n    //     address payable _owner = payable(msg.sender);\r\n    //     _owner.transfer(nativeCrrency);\r\n    // }\r\n\r\n     /* *\r\n     * @dev transfer native currency contract to wallet\r\n     * @param to\r\n     */\r\n    function transferNativeCurrenc(address payable to, uint value) payable external{\r\n       uint contractBalance = address(this).balance;\r\n        require(contractBalance >= msg.value,\"Insufficient fund\");\r\n        to.transfer(value);\r\n    }\r\n}\r\n\r\n",
  "sourcePath": "D:\\madhu\\contracts\\Payable.sol",
  "ast": {
    "absolutePath": "project:/contracts/Payable.sol",
    "exportedSymbols": {
      "Payable": [
        778
      ]
    },
    "id": 779,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 739,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 778,
        "linearizedBaseContracts": [
          778
        ],
        "name": "Payable",
        "nameLocation": "70:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "145:2:3",
              "statements": []
            },
            "id": 743,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "125:2:3"
            },
            "returnParameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "145:0:3"
            },
            "scope": 778,
            "src": "118:29:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "499:2:3",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "473:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:2:3"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:3"
            },
            "scope": 778,
            "src": "464:37:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "1025:159:3",
              "statements": [
                {
                  "assignments": [
                    755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "contractBalance",
                      "nameLocation": "1040:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "1035:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1035:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 761,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 758,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1066:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Payable_$778",
                            "typeString": "contract Payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Payable_$778",
                            "typeString": "contract Payable"
                          }
                        ],
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1058:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1058:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1058:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1058:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1035:44:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 763,
                          "name": "contractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 755,
                          "src": "1098:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 764,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1117:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1117:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1098:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e64",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1127:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_deb7d445165b9b7f8c05f1382ef40a5685d20c7246180b1d67b4c7eb28b2c697",
                          "typeString": "literal_string \"Insufficient fund\""
                        },
                        "value": "Insufficient fund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_deb7d445165b9b7f8c05f1382ef40a5685d20c7246180b1d67b4c7eb28b2c697",
                          "typeString": "literal_string \"Insufficient fund\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1090:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 773,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "1170:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "1158:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1158:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1158:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:18:3"
                }
              ]
            },
            "functionSelector": "1ea3ccf1",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferNativeCurrenc",
            "nameLocation": "955:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "993:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "977:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1002:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "997:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:32:3"
            },
            "returnParameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:0:3"
            },
            "scope": 778,
            "src": "946:238:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 779,
        "src": "61:1126:3",
        "usedErrors": []
      }
    ],
    "src": "35:1156:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-01T05:45:58.077Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}